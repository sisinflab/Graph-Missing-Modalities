experiment:
  backend: pytorch
  data_config:
    strategy: fixed
    train_path: ../data/{0}/train_final_indexed.tsv
    validation_path: ../data/{0}/val_final_indexed.tsv
    test_path: ../data/{0}/test_final_indexed.tsv
    side_information:
      - dataloader: VisualAttribute
        visual_features: ../data/{0}/visual_embeddings_final_indexed/torch/ResNet50/avgpool
      - dataloader: TextualAttribute
        textual_features: ../data/{0}/textual_embeddings_final_indexed/sentence_transformers/sentence-transformers/all-mpnet-base-v2/1
  dataset: Office_Products
  top_k: 20
  evaluation:
    cutoffs: [ 20 ]
    simple_metrics: [ Recall, nDCG, Precision ]
  gpu: 0
  external_models_path: ../external/models/__init__.py
  models:
#    external.BPRMF:
#      meta:
#        hyper_opt_alg: grid
#        verbose: True
#        save_weights: False
#        save_recs: False
#        validation_rate: 1
#        validation_metric: Recall@20
#        restore: False
#      lr: [ 0.0001, 0.0005, 0.001, 0.005, 0.01 ]
#      epochs: 200
#      factors: 64
#      batch_size: 1024
#      l_w: [ 1e-5, 1e-2 ]
#      seed: 123
#      early_stopping:
#        patience: 5
#        mode: auto
#        monitor: Recall@20
#        verbose: True
#    external.VBPR:
#      meta:
#        hyper_opt_alg: grid
#        verbose: True
#        save_weights: False
#        save_recs: False
#        validation_rate: 1
#        validation_metric: Recall@20
#        restore: False
#      lr: [ 0.0001, 0.0005, 0.001, 0.005, 0.01 ]
#      factors: 64
#      epochs: 200
#      l_w: [ 1e-5, 1e-2 ]
#      modalities: ('visual', 'textual')
#      loaders: ('VisualAttribute','TextualAttribute')
#      batch_size: 1024
#      comb_mod: concat
#      seed: 123
#      early_stopping:
#        patience: 5
#        mode: auto
#        monitor: Recall@20
#        verbose: True
#    external.NGCF:
#      meta:
#        hyper_opt_alg: grid
#        verbose: True
#        save_weights: False
#        save_recs: False
#        validation_rate: 1
#        validation_metric: Recall@20
#        restore: False
#      lr: [ 0.0001, 0.0005, 0.001, 0.005, 0.01 ]
#      epochs: 200
#      n_layers: 3
#      factors: 64
#      weight_size: 64
#      node_dropout: 0.1
#      message_dropout: 0.1
#      batch_size: 1024
#      normalize: True
#      l_w: [ 1e-5, 1e-2 ]
#      seed: 123
#      early_stopping:
#        patience: 5
#        mode: auto
#        monitor: Recall@20
#        verbose: True
    external.LightGCN:
      meta:
        hyper_opt_alg: grid
        verbose: True
        save_weights: False
        save_recs: False
        validation_rate: 1
        validation_metric: Recall@20
        restore: False
      lr: [ 0.0001, 0.0005, 0.001, 0.005, 0.01 ]
      epochs: 200
      n_layers: 3
      factors: 64
      batch_size: 1024
      normalize: True
      l_w: [ 1e-5, 1e-2 ]
      seed: 123
      early_stopping:
        patience: 5
        mode: auto
        monitor: Recall@20
        verbose: True
    external.LightGCNM:
      meta:
        hyper_opt_alg: grid
        verbose: True
        save_weights: False
        save_recs: False
        validation_rate: 1
        validation_metric: Recall@20
        restore: False
      lr: [ 0.0001, 0.0005, 0.001, 0.005, 0.01 ]
      epochs: 200
      n_layers: 3
      factors: 64
      batch_size: 1024
      modalities: ('visual', 'textual')
      loaders: ('VisualAttribute','TextualAttribute')
      normalize: True
      l_w: [ 1e-5, 1e-2 ]
      seed: 123
      early_stopping:
        patience: 5
        mode: auto
        monitor: Recall@20
        verbose: True